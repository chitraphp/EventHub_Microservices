// <auto-generated />
using System;
using EventTicketAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EventTicketAPI.Migrations
{
    [DbContext(typeof(TicketCatalogContext))]
    partial class TicketCatalogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:Sequence:.ticket_hilo", "'ticket_hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ticket_type_hilo", "'ticket_type_hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EventTicketAPI.Domain.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "ticket_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<int>("AvailableQty")
                        .HasMaxLength(10);

                    b.Property<int>("EventId")
                        .HasMaxLength(8);

                    b.Property<string>("EventTitle")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<int>("MaxTktsPerOrder")
                        .HasMaxLength(5);

                    b.Property<int>("MinTktsPerOrder")
                        .HasMaxLength(5);

                    b.Property<DateTime>("SalesEndDate")
                        .HasMaxLength(20);

                    b.Property<DateTime>("SalesStartDate")
                        .HasMaxLength(20);

                    b.Property<string>("TicketDescription");

                    b.Property<decimal>("TicketPrice")
                        .HasMaxLength(10);

                    b.Property<int>("TicketTypeId");

                    b.Property<int>("TotalCapacity");

                    b.HasKey("Id");

                    b.HasIndex("TicketTypeId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("EventTicketAPI.Domain.TicketType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "ticket_type_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("TicketType");
                });

            modelBuilder.Entity("EventTicketAPI.Domain.Ticket", b =>
                {
                    b.HasOne("EventTicketAPI.Domain.TicketType", "TicketType")
                        .WithMany()
                        .HasForeignKey("TicketTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
